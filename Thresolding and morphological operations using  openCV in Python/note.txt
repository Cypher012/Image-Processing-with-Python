1. Median Filter

Definition: The median filter is a non-linear digital filtering technique, often used to remove noise from images. It replaces each pixel's value with the median value of the intensities in the neighborhood of that pixel.

Function: cv2.medianBlur(src, ksize)

    Parameters:
        src: Input image.
        ksize: Size of the kernel; it must be odd and greater than 1.

Applications:

    Removing salt-and-pepper noise from images.
    Smoothing images while preserving edges better than linear smoothing filters.

2. Non-Local Means Filter

Definition: The Non-Local Means (NLM) filter is an image denoising method that averages all pixels in an image but weights them based on their similarity to the pixel being processed. It considers the entire image, not just local pixels.

Function: cv2.fastNlMeansDenoising(src, dst=None, h=10, templateWindowSize=7, searchWindowSize=21)

    Parameters:
        src: Input image.
        dst: Output image (optional).
        h: Filter strength; a larger value results in a smoother image.
        templateWindowSize: Size of the window used to compute pixel similarity.
        searchWindowSize: Size of the window to search for similar pixels.

Applications:

    Effective in removing noise while preserving fine details in images.
    Useful for photographic and medical imaging.

3. Erosion

Definition: Erosion is a morphological operation that reduces the size of objects in a binary image. It works by eroding away the boundaries of the foreground (typically white) pixels.

Function: cv2.erode(src, kernel, iterations=1)

    Parameters:
        src: Input image (binary).
        kernel: Structuring element (e.g., a rectangular, elliptical, or cross-shaped kernel).
        iterations: Number of times erosion is applied.

Applications:

    Removing small-scale noise.
    Shrinking objects in the image.
    Used in preprocessing steps before performing operations like dilation or closing.

4. Dilation

Definition: Dilation is the opposite of erosion. It increases the size of the objects in a binary image by adding pixels to the boundaries of the foreground objects.

Function: cv2.dilate(src, kernel, iterations=1)

    Parameters:
        src: Input image (binary).
        kernel: Structuring element.
        iterations: Number of times dilation is applied.

Applications:

    Filling small holes in objects.
    Expanding objects in the image.
    Often used after erosion to recover the original shape of objects.

5. Opening

Definition: Opening is a morphological operation that involves an erosion operation followed by a dilation operation. It is used to remove small objects (noise) from the foreground.

Function: cv2.morphologyEx(src, cv2.MORPH_OPEN, kernel)

    Parameters:
        src: Input image (binary).
        kernel: Structuring element.

Applications:

    Removing noise while preserving the shape of larger objects.
    Useful in object detection and segmentation tasks.

6. Closing

Definition: Closing is the reverse of opening, consisting of a dilation followed by an erosion. It is used to close small holes and gaps in the foreground.

Function: cv2.morphologyEx(src, cv2.MORPH_CLOSE, kernel)

    Parameters:
        src: Input image (binary).
        kernel: Structuring element.

Applications:

    Filling small holes in objects.
    Used in preprocessing before segmentation tasks.

7. Top-Hat Transform

Definition: The top-hat transform (or white top-hat) is a morphological operation that extracts small elements (or bright spots) from the background. It is the difference between the input image and its opening.

Function: cv2.morphologyEx(src, cv2.MORPH_TOPHAT, kernel)

    Parameters:
        src: Input image (binary).
        kernel: Structuring element.

Applications:

    Enhancing bright features on a darker background.
    Used in image analysis and texture recognition.

8. Black-Hat Transform

Definition: The black-hat transform is the opposite of the top-hat transform. It extracts small dark regions (or features) from the bright background, defined as the difference between the closing of the image and the input image.

Function: cv2.morphologyEx(src, cv2.MORPH_BLACKHAT, kernel)

    Parameters:
        src: Input image (binary).
        kernel: Structuring element.

Applications:

    Enhancing dark features on a lighter background.
    Useful for detecting dark objects in images.

9. Gradient Morphological Operation

Definition: The gradient operation in morphology is the difference between the dilation and erosion of an image. It highlights the edges of objects in the image.

Function: cv2.morphologyEx(src, cv2.MORPH_GRADIENT, kernel)

    Parameters:
        src: Input image (binary).
        kernel: Structuring element.

Applications:

    Edge detection in images.
    Used to find outlines and contours of objects.

Summary

    Median Filter: Reduces noise, preserving edges.
    Non-Local Means Filter: Advanced noise reduction by averaging based on pixel similarity across the entire image.
    Erosion and Dilation: Morphological operations for shape manipulation.
    Opening and Closing: Combined operations to remove noise or fill gaps.
    Top-Hat and Black-Hat: Extract bright and dark features, respectively.
    Gradient Morphological Operation: Edge detection based on the differences between dilation and erosion.

These techniques are commonly used in image processing for tasks such as noise reduction, edge detection, object segmentation, and feature extraction.